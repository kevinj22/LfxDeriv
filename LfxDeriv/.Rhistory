roxygen2::roxygenise()
install.packages("roxygen")
install.packages("roxygen2")
roxygen2::roxygenise()
Q
roxygen2::roxygenise()
Q
roxygen2::roxygenise()
Q
install.packages("rtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
install.packages("glue")
library(devtools)
find_rtools(T)
devtools::install_git("spida2")
devtools::install_github('gmonette/spida2')
library(spida2)
library(devtools)
library(LfxDeriv)
library(spida2)
library(effects)
ds <- Arrests
ds$numVar <- rnorm(dim(ds[1]))
#asc <- glm(released ~ I(2*exp(age)*log(age)*age), data=ds, family=binomial)
#asc <- glm(released ~ I(exp(age) + log(age) + age) + I(2*exp(age)*log(age)):numVar + I(2*exp(age)*log(age)*age):numVar, data=ds, family=binomial)
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) + I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
summary(asc)
vName <- "age"
dsForm <- LfxDerivative(asc, vName)
dsForm
devtools::use_testthat()
install.packages("testthat")
devtools::use_testthat()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(spida2)
library(effects)
ds <- Arrests
ds$numVar <- rnorm(dim(ds[1]))
#asc <- glm(released ~ I(2*exp(age)*log(age)*age), data=ds, family=binomial)
#asc <- glm(released ~ I(exp(age) + log(age) + age) + I(2*exp(age)*log(age)):numVar + I(2*exp(age)*log(age)*age):numVar, data=ds, family=binomial)
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) + I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
summary(asc)
vName <- "age"
dsForm <- LfxDerivative(asc, vName)
dsForm
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(spida2)
library(effects)
library(car)
ans <- c("1 *  M(1/age)","0","0","1 *  M(I(2 * age))","1 *  M(I(-(1/age^2)))",
"1 *  M(I(1 + 1/age + exp(age)))","1 *  M(1/age) * M(sex)","1 *  M(1/age) * M(colour)",
"0", "1 *  M(sex) * M(I(2 * age))", "1 *  M(colour) * M(I(2 * age))",
"1 *  M(I(exp(age) * ((1/age + log(age)) * age + log(age)))) * numVar",
"1 *  M(1/age) * M(sex) * M(colour)", "1 *  M(sex) * M(colour) * M(I(2 * age))")
ans
ds <- Arrests
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) +
I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
vName <- "age"
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) +
I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) +
I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(spida2)
library(effects)
ans <- c("1 *  M(1/age)","0","0","1 *  M(I(2 * age))","1 *  M(I(-(1/age^2)))",
"1 *  M(I(1 + 1/age + exp(age)))","1 *  M(1/age) * M(sex)","1 *  M(1/age) * M(colour)",
"0", "1 *  M(sex) * M(I(2 * age))", "1 *  M(colour) * M(I(2 * age))",
"1 *  M(I(exp(age) * ((1/age + log(age)) * age + log(age)))) * numVar",
"1 *  M(1/age) * M(sex) * M(colour)", "1 *  M(sex) * M(colour) * M(I(2 * age))")
ds <- Arrests
ds$numVar <- rnorm(dim(ds[1]))
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) +
I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
# vName <- "age"
# dsForm <- LfxDerivative(asc, vName)
expect_equal(1, 1)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(LfxDeriv)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(LfxDeriv)
library(spida2)
library(effects)
ds <- Arrests
ds$numVar <- rnorm(dim(ds[1]))
#asc <- glm(released ~ I(2*exp(age)*log(age)*age), data=ds, family=binomial)
#asc <- glm(released ~ I(exp(age) + log(age) + age) + I(2*exp(age)*log(age)):numVar + I(2*exp(age)*log(age)*age):numVar, data=ds, family=binomial)
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) + I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
summary(asc)
vName <- "age"
dsForm <- LfxDerivative(asc, vName)
dsForm
vName <- "sex"
dsForm <- LfxDerivative(asc, vName)
dsForm
library(car)
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "education"
dsForm <- LfxDerivate(mod, vName, yName = "income")
dsForm
dsForm <- LfxDerivative(asc, vName)
library(car)
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "education"
dsForm <- LfxDerivative(mod, vName, yName = "income")
dsForm
devtools::test()
library(spida2)
library(effects)
ds <- Arrests
ds$numVar <- rnorm(dim(ds[1]))
#asc <- glm(released ~ I(2*exp(age)*log(age)*age), data=ds, family=binomial)
#asc <- glm(released ~ I(exp(age) + log(age) + age) + I(2*exp(age)*log(age)):numVar + I(2*exp(age)*log(age)*age):numVar, data=ds, family=binomial)
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) + I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
summary(asc)
vName <- "age"
dsForm <- LfxDerivative(asc, vName)
dsForm
vName <- "sex"
dsForm <- LfxDerivative(asc, vName)
dsForm
library(car)
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "education"
dsForm <- LfxDerivative(mod, vName, yName = "income")
dsForm
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
d = Prestige
head(d)
unique(d$type)
edit(Lfx)
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
summary(mod)
ds <- Prestige
ds$type <- as.factor(ds$type)
mod <- lm(log(income) ~  education * type, data = ds)
summary(mod)
Lfx(mod)
devtools::test()
LfxDerivative(mod, "type")
ds$type <- as.factor(ds$type)
mod <- lm(log(income) ~  education * type, data = ds)
ds <- Prestige
ds$type <- as.factor(ds$type)
mod <- lm(log(income) ~  education * type, data = ds)
vName <- "type"
autoL <- LfxDerivData(mod,vName,getData(mod))
Q
LfxDerivative(mod, vName)
Lfx(mod)
summary(mod)
L <- Lfx(mod,list(0, 1, 1 * education))
L <- Lfx(mod,list(0, 0, 1, 1 * education))
L <- Lfx(mod,list(0, 1, 1 * education))
Lfx(mod)
ds <- Prestige
ds$type <- as.factor(ds$type)
mod <- lm(log(income) ~  education * type, data = ds)
vName <- "type"
L <- Lfx(mod,list(0, 1, 1 * education))
L <- Lfx(mod,list(1, 1 * education))
L <- Lfx(mod,list(0, 1, 1, 1 * education))
Lfx(mo)
Lfx(mod)
L <- Lfx(mod,list(0, 0, 1, 1 * education))
L <- Lfx(mod,list(0, 0, 1, 1))
summary(mod)
summary(mod)
L <- Lfx(mod,list(0, 0, 1, 1,1,1))
L <- Lfx(mod,list(0, 0, 1, 1,1))
Lfx(mod)
Lfx(mod,list(1,1 * education, 1 * M(type),1))
mod <- lm(log(income) ~  education + type, data = ds)
vName <- "type"
autoL <- LfxDerivData(mod,vName)
mod <- lm(log(income) ~  education + type, data = ds)
summary(mod)
mod <- lm(income ~  education + type, data = ds)
autoL <- LfxDerivData(mod,vName)
Q
L <- Lfx(mod,list(0, 0, 1, 1,1))
Lfx(mod)
Lfx(mod,list(1,1,1))
Lfx(mod,list(1,1,1),ds)
head(ds)
mod <- lm(income ~  education + prestige, data = ds)
autoL <- LfxDerivData(mod,vName)
vName <- "prestige"
autoL <- LfxDerivData(mod,vName,getData(mod))
Lfx(mod)
LfxDerivative(mod,vName)
Lfx(mod,LfxDerivative(mod,vName))
Lfx(mod,c(1,LfxDerivative(mod,vName)))
ans <- list("1 *  M(1/age)","0","0","1 *  M(I(2 * age))","1 *  M(I(-(1/age^2)))",
"1 *  M(I(1 + 1/age + exp(age)))","1 *  M(1/age) * M(sex)","1 *  M(1/age) * M(colour)",
"0", "1 *  M(sex) * M(I(2 * age))", "1 *  M(colour) * M(I(2 * age))",
"1 *  M(I(exp(age) * ((1/age + log(age)) * age + log(age)))) * numVar",
"1 *  M(1/age) * M(sex) * M(colour)", "1 *  M(sex) * M(colour) * M(I(2 * age))")
ds <- Arrests
ds$numVar <- rnorm(dim(ds[1]))
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) +
I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
vName <- "age"
dsForm <- LfxDerivative(asc, vName)
dsForm
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "education"
dsForm <- LfxDerivative(mod, vName, yName = "income")
summary(mod)
vName <- "type"
dsForm <- LfxDerivative(mod, vName, yName = "income")
dsForm
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "type"
autoL <- LfxDerivData(mod,vName,getData(mod))
Q
library(spida2)
library(effects)
library(car)
#ds <- Prestige
#ds$type <- as.factor(ds$type)
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "education"
dsForm <- LfxDerivative(mod, vName, yName = "income")
dsForm <- LfxDerivative(mod, vName)
vName <- "education"
dsForm <- LfxDerivative(mod, vName)
vName <- "type"
dsForm <- LfxDerivative(mod, vName)
dsForm
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "type"
autoL <- LfxDerivData(mod,vName,getData(mod))
function (x, value)
Q
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "type"
autoL <- LfxDerivData(mod,vName,getData(mod))
Q
#ds <- Prestige
#ds$type <- as.factor(ds$type)
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "type"
autoL <- LfxDerivData(mod,vName,data = getData(mod))
Q
autoL <- LfxDerivData(mod,vName,yName = "income",data = getData(mod))
Q
#ds <- Prestige
#ds$type <- as.factor(ds$type)
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
ans <- list("1 *  1 * (1/income)^(-1)", "0", "0", "0", "1 *  M(type) * (1/income)^(-1)",
"1 *  women * (1/income)^(-1)", "0", "1 *  prestige * (1/income)^(-1)",
"0", "0", "1 *  M(type) * women * (1/income)^(-1)", "1 *  M(type) * prestige * (1/income)^(-1)",
"1 *  women * prestige * (1/income)^(-1)", "0",  "1 *  M(type) * women * prestige * (1/income)^(-1)")
vName <- "type"
autoL <- LfxDerivData(mod,vName,yName = "income",data = getData(mod))
Q
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "type"
dsForm <- LfxDerivative(mod, vName, yName = "income")
dsForm
autoL <- LfxDerivData(mod,vName,yName = "income",data = getData(mod))
Q
autoL <- LfxDerivData(mod,vName,data = getData(mod))
Q
Lfx(mod)
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "type"
dsForm <- LfxDerivative(mod, vName, yName = "income")
autoL <- LfxDerivData(mod,vName,data = getData(mod), yName = "income")
Q
dsForm <- Lfx(mod,LfxDerivative(mod, vName, yName = "income"))
dsForm <- LfxDerivative(mod, vName, yName = "income")
dsForm
dsForm <- Lfx(mod,LfxDerivative(mod, vName))
Lfx(mod)
LfxDerivative(mod, vName)
c(list("1"),LfxDerivative(mod, vName))
Lfx(mod,c(list("1"),LfxDerivative(mod, vName)))
mod <- lm(log(income) ~  education + prestige, data = Prestige)
summary(mod)
mod <- lm(log(income) ~  education + type, data = Prestige)
vName <- "type"
dsForm <- Lfx(mod,LfxDerivative(mod, vName))
LfxDerivative(mod, vName)
Lfx(mod)
Lfx(mod,list(1,1,1))
Lfx(mod,list(1,1))
Lfx(mod,list(1,M(1)))
edit(Lfx)
Lsub <- do.call(cbind, eval(substitute(list(1,1,1)), Prestige))
Lsub
Lsub <- do.call(cbind, eval(substitute(list(1,1 * education,1)), Prestige))
Lsub
Lsub <- do.call(cbind, eval(substitute(list(1 * education,1)), Prestige))
Lsub
Lsub <- do.call(cbind, eval(substitute(list(1 * education)), Prestige))
Lsub
d <- LfxDerivative(mod, vName)
d
Lsub <- do.call(cbind, eval(substitute(d), Prestige))
Lsub
do.call(cbind,lapply(d, function (x) eval(parse(text=x),Prestiege)))
Q
do.call(cbind,lapply(d, function (x) eval(parse(text=x),Prestige)))
d
do.call(cbind,lapply(d, function (x) eval(parse(text=x),Prestige)))
edit(Lfx)
Lfx(mod)
Lfx(mod)
Lfx(mod,Lfx(mod))
Lfx(mod,list( 1,
1 * education,
1 * M(type)
))
Lfx(mod,list( 1,
1 * education,
1 * M(type)
))
Lfx(mod,list( 1,
1 * education,
1 * M(type)
))
L <- Lfx(mod, list(1, 1 * education, 1 * M(type)))
dsForm <- Lfx(mod,LfxDerivative(mod, vName))
LfxDerivative(mod, vName)
c("1",LfxDerivative(mod, vName))
c("0",LfxDerivative(mod, vName))
devtools::test()
devtools::test()
dsFormatted
dsFormatted
lapply(dsFormatted, function (x) eval(parse(text=x),data)
)
do.call(cbind,lapply(dsFormatted, function (x) eval(parse(text=x),data)))
daa
data
dsFormatted
library(LfxDeriv)
devtools::test()
mod <- lm(log(income) ~  education + type, data = Prestige)
vName <- "type"
autoL <- LfxDerivData(mod, vName, data = getData(mod))
autoL
wwA <- as.data.frame(wwA)
wwA <- wald(mod,autoL)
L
L <- Lfx(mod, list(1, 1 * education, 1 * M(type)))
L
devtools::test()
devtools::test()
devtools::test()
L
L
mod <- lm(log(income) ~  education + type, data = Prestige)
vName <- "type"
L <- Lfx(mod, list(1, 1 * education, 1 * M(type)))
L
#L <- Lfx(mod, list(1, 1 * education, 1 * M(type)))
L <- Lfx(mod, list(0, 0, 1 * M(1)))
#L <- Lfx(mod, list(1, 1 * education, 1 * M(type)))
L <- Lfx(mod, list(0, 0, 1 * M(type)))
#L <- Lfx(mod, list(1, 1 * education, 1 * M(type)))
L <- Lfx(mod, list(0, 0, 1)
wwO <- wald(fit.hiv2, L)
wwO <- as.data.frame(wwO)
expect_equal(sum(wwA == wwO) == sum(dim(wwO)[1] * dim(wwO)[2]),TRUE)
})
#L <- Lfx(mod, list(1, 1 * education, 1 * M(type)))
L <- Lfx(mod, list(0, 0, 1))
mod <- lm(log(income) ~  education*type, data = Prestige)
vName <- "education"
autoL <- LfxDerivData(mod, vName, data = getData(mod))
L
#L <- Lfx(mod, list(1, 1 * education, 1 * M(type)))
L <- Lfx(mod, list(0, 1, 0, 1 * M(type)))
summary(mod)
Lfx(mod)
#L <- Lfx(mod, list(1, 1 * education, 1 * M(type)))
L <- Lfx(mod, list(0, 1, 0, 1 * M(type)))
#L <- Lfx(mod, list(1, 1 * education, 1 * M(type)))
L <- Lfx(mod, list(0, 1, 0 * M(type), 1 * M(type)))
autoL <- LfxDerivData(mod, vName, data = getData(mod))
L
gg$fixed
Q
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(LfxDeriv)
dsFormatted
Q
Q
library(LfxDeriv)
devtools::test()
dsFormatted
Q
devtools::test()
dsFormatted
devtools::test()
library(LfxDeriv)
devtools::test()
ds <- Arrests
ds$numVar <- rnorm(dim(ds[1]))
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) +
I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
vName <- "age"
dsForm <- LfxDerivative(asc, vName)
library(LfxDeriv)
devtools::test()
ds <- Arrests
ds$numVar <- rnorm(dim(ds[1]))
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) +
I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
dsForm <- LfxDerivative(asc, vName)
vName <- "age"
dsForm <- LfxDerivative(asc, vName)
dsForm
?gsub
library(LfxDeriv)
devtools::test()
ds <- Arrests
ds$numVar <- rnorm(dim(ds[1]))
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) +
I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
vName <- "age"
dsForm <- LfxDerivative(asc, vName)
dsForm
devtools::test()
ds <- Arrests
ds$numVar <- rnorm(dim(ds[1]))
asc <- glm(released ~ (log(age) + sex + colour)^3 + I(age^2) + I(age^2)*sex*colour + I(1.0/age) +
I(exp(age) + log(age) + age) + I(exp(age)*log(age)*age):numVar, data=ds, family=binomial)
vName <- "sex"
dsForm <- LfxDerivative(asc, vName)
dsForm
devtools::test()
mod <- lm(log(income) ~  education * type * women * prestige, data = Prestige)
vName <- "education"
dsForm <- LfxDerivative(mod, vName, yName = "income")
dsForm
devtools::test()
devtools::test()
edit(Lfx)
library(LfxDeriv)
devtools::test()
library(LfxDeriv)
devtools::test()
